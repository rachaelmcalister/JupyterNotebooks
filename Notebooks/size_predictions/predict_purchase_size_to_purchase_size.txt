WITH
temp_nick_size_pred_test_set AS 
(
    SELECT
        t.garment_category_id,
        t.profile_id,
        t.garment_id,
        t.order_date AS date,
        t.quantity,
        t.return_quantity,
        t.size,
        b.base_size_id,
        g.sizing_range_id
    FROM activity_johnlewis.v_transaction_labelled_garments AS t
    INNER JOIN activity_johnlewis.v_garment_this_partner AS g
    ON t.garment_id = g.garment_id
    LEFT JOIN activity_johnlewis.temp_d_sku_garment_id_base_size AS b
    ON t.garment_id = b.garment_id AND t.size = b.size
    WHERE profile_complete = true AND profile_signup_finished_at::date <= order_day
        AND '2019-11-01' <= order_day AND order_day < '2019-12-01'
        AND '2019-01-01' <= profile_signup_finished_at AND profile_signup_finished_at < '2019-11-01'
        AND base_size_id IS NOT NULL
),
temp_nick_size_pred_query_set AS 
(
    SELECT DISTINCT garment_category_id, profile_id, sizing_range_id FROM temp_nick_size_pred_test_set
),
quiz_sizes AS
(
    SELECT
        p.profile_id,
        p.finished_signup_at,
        s.dresses_base_size_id,
        s.tops_base_size_id,
        s.trousers_base_size_id,
        s.dresses_sizing_range_id,
        s.tops_sizing_range_id,
        s.trousers_sizing_range_id
    FROM activity_johnlewis.v_profile_this_partner AS p
    INNER JOIN shared_resources.d_profile_signup_size AS s
    ON p.profile_id = s.profile_id
    INNER JOIN (SELECT DISTINCT profile_id FROM temp_nick_size_pred_test_set) AS query_profiles
    ON p.profile_id = query_profiles.profile_id
    WHERE s.dresses_base_size_id IS NOT NULL
        AND '2019-01-01' <= finished_signup_at AND finished_signup_at < '2019-11-01'
),
quiz_sizes_pivot AS
(
    SELECT
        1 AS signup_size_category_id,
        profile_id,
        finished_signup_at,
        dresses_base_size_id AS base_size_id,
        dresses_sizing_range_id AS sizing_range_id
    FROM quiz_sizes
    UNION ALL
    SELECT
        6 AS signup_size_category_id,
        profile_id,
        finished_signup_at,
        tops_base_size_id AS base_size_id,
        tops_sizing_range_id AS sizing_range_id
    FROM quiz_sizes
    UNION ALL
    SELECT
        12 AS signup_size_category_id,
        profile_id,
        finished_signup_at,
        tops_base_size_id AS base_size_id,
        tops_sizing_range_id AS sizing_range_id
    FROM quiz_sizes
    UNION ALL
    SELECT
        9 AS signup_size_category_id,
        profile_id,
        finished_signup_at,
        trousers_base_size_id AS base_size_id,
        trousers_sizing_range_id AS sizing_range_id
    FROM quiz_sizes
),
train_data AS
(
    SELECT
        t.transaction_id,
        t.garment_category_id,
        t.profile_id,
        t.garment_id,
        t.order_date AS date,
        t.quantity,
        t.return_quantity,
        t.size,
        b.base_size_id,
        g.sizing_range_id
    FROM activity_johnlewis.v_transaction_labelled_garments AS t
    INNER JOIN activity_johnlewis.v_garment_this_partner AS g
    ON t.garment_id = g.garment_id
    LEFT JOIN activity_johnlewis.temp_d_sku_garment_id_base_size AS b
    ON t.garment_id = b.garment_id AND t.size = b.size
    WHERE profile_complete = true AND profile_signup_finished_at::date <= order_day
        AND order_day < '2019-11-01'
        AND profile_signup_finished_at < '2019-11-01'
        AND base_size_id IS NOT NULL
        AND (quantity - return_quantity) > 0
),
coocc AS
(
    SELECT
        left_t.garment_category_id AS left_garment_category_id,
        left_t.sizing_range_id AS left_sizing_range_id,
        left_t.base_size_id AS left_base_size_id,
        right_t.garment_category_id AS right_garment_category_id,
        right_t.sizing_range_id AS right_sizing_range_id,
        right_t.base_size_id AS right_base_size_id,
        count(*) AS entries,
        sum(right_t.quantity) AS quantity,
        count(distinct right_t.profile_id) AS profiles
    FROM train_data AS left_t
    INNER JOIN train_data AS right_t
    ON left_t.garment_category_id = right_t.garment_category_id
        AND left_t.profile_id = right_t.profile_id
        AND left_t.transaction_id != right_t.transaction_id
        AND left_t.date <= right_t.date
    GROUP BY
        left_t.garment_category_id,
        left_t.sizing_range_id,
        left_t.base_size_id,
        right_t.garment_category_id,
        right_t.sizing_range_id,
        right_t.base_size_id
),
ranks AS
(
    SELECT
        *,
        ROW_NUMBER() OVER
        (
            PARTITION BY
                left_garment_category_id,
                left_sizing_range_id,
                left_base_size_id,
                right_garment_category_id,
                right_sizing_range_id
            ORDER BY entries DESC
        ) AS rank
    FROM coocc
),
pred_scores AS
(
    SELECT
        query.garment_category_id,
        query.profile_id,
        query.sizing_range_id,
        ranks.right_base_size_id AS base_size_id,
        ranks.entries,
        ranks.quantity,
        ranks.profiles
    FROM temp_nick_size_pred_query_set AS query
    INNER JOIN quiz_sizes_pivot AS quiz_sizes
    ON query.profile_id = quiz_sizes.profile_id
        AND query.garment_category_id = quiz_sizes.signup_size_category_id
    INNER JOIN ranks
    ON quiz_sizes.signup_size_category_id = ranks.left_garment_category_id
        AND quiz_sizes.sizing_range_id = ranks.left_sizing_range_id
        AND quiz_sizes.base_size_id = ranks.left_base_size_id
        AND query.garment_category_id = ranks.right_garment_category_id
        AND query.sizing_range_id = ranks.right_sizing_range_id
    WHERE ranks.rank = 1
),
temp_nick_size_pred_learn_tt AS 
(
    SELECT
        garment_category_id,
        profile_id,
        sizing_range_id,
        base_size_id
    FROM pred_scores
    WHERE entries>=10
 ),
temp_nick_size_pred_same_as_signup AS 
(
    SELECT
        q.garment_category_id,
        q.profile_id,
        q.sizing_range_id,
        preds.base_size_id
    FROM temp_nick_size_pred_query_set AS q
    INNER JOIN quiz_sizes_pivot AS preds
    ON q.garment_category_id = preds.signup_size_category_id
        AND q.profile_id = preds.profile_id
),
 temp_nick_size_pred_learn_tt_fallback AS
 (
    SELECT
        q.garment_category_id,
        q.profile_id,
        q.sizing_range_id,
    COALESCE(one.base_size_id, two.base_size_id) AS base_size_id
    FROM temp_nick_size_pred_query_set AS q
    LEFT JOIN temp_nick_size_pred_learn_tt AS one
    ON q.garment_category_id = one.garment_category_id
        AND q.profile_id = one.profile_id
        AND q.sizing_range_id = one.sizing_range_id
    LEFT JOIN temp_nick_size_pred_same_as_signup AS two
    ON q.garment_category_id = two.garment_category_id
        AND q.profile_id = two.profile_id
        AND q.sizing_range_id = two.sizing_range_id
 )
SELECT
    test.garment_category_id,
    test.profile_id,
    test.sizing_range_id,
    test.garment_id,
    test.quantity,
    test.return_quantity,
    test.base_size_id AS real_base_size_id,
    preds.base_size_id AS pred_base_size_id,
    CASE WHEN pred_base_size_id = real_base_size_id THEN true ELSE false END AS correct_pred
FROM temp_nick_size_pred_test_set AS test
LEFT JOIN temp_nick_size_pred_learn_tt_fallback AS preds
ON test.garment_category_id = preds.garment_category_id
    AND test.profile_id = preds.profile_id
    AND test.sizing_range_id = preds.sizing_range_id
